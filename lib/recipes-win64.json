{
	"packages": [
		{
			"name": "Alembic",
			"platforms": ["osx", "windows"],
			"dir": "Alembic",
			"build_in": "$(MKVFX_SRC_ROOT)/Alembic",
			"dependencies": [ "boost", "hdf5", "IlmBase", "PyIlmBase", "z" ],
			"repository": {
				"type": "git",
				"url": "git://github.com/alembic/alembic.git"
			},
			"recipe_windows": [
				"cmake -G \"Visual Studio 14 2015 Win64\" +",
					"-DUSE_PYILMBASE=1 +",
					"-DBOOST_INCLUDEDIR=\"$(MKVFX_ROOT)/include\" +",
					"-DBOOST_LIBRARYDIR=\"$(MKVFX_ROOT)/lib\" +",
					"-DHDF5_ROOT=\"$(MKVFX_ROOT)\" +",
					"-DZLIB_LIBRARY=\"$(MKVFX_ROOT)\\lib\\zlibstatic.lib\" +",
					"-DZLIB_INCLUDE_DIR=\"$(MKVFX_ROOT)\\include\" +",
					"-DALEMBIC_PYILMBASE_PYIMATH_LIB=\"$(MKVFX_ROOT)/lib/libPyImath.dylib\" +",
					"-DILMBASE_ROOT=\"$(MKVFX_ROOT)\" +",
					"-DALEMBIC_PYILMBASE_ROOT=\"$(MKVFX_ROOT)\" "
			],
			"install_windows": []
		},
		{
			"name": "assimp",
			"platforms": ["windows"],
			"dependencies_windows": [ "z" ],
			"dir": "assimp",
			"build_in": "$(MKVFX_BUILD_ROOT)/assimp",
			"repository": {
				"type": "git",
				"url": "git://github.com/assimp/assimp.git"
			},
			"build" : {
				"cmake" : [
					"-DDirectX_D3DX9_LIBRARY=\"%WINDOWSSDKDIR%Lib\\%WINDOWSSDKVERSION%um\\x86\\d3d9.lib\"",
					"-DDirectX_INCLUDE_DIR=\"%WINDOWSSDKDIR%Include\\%WINDOWSSDKVERSION%um\""
				],
				"configurations": [ "Debug", "Release" ]
			},
			"install": [
				"copy \"$(MKVFX_SRC_ROOT)\\assimp\\include\\assimp\" \"$(MKVFX_ROOT)\\include\\assimp\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\assimp\\code\\Release\\*.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\assimp\\code\\Release\\*.dll\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\assimp\\code\\Release\\*.pdb\" \"$(MKVFX_ROOT)\\bin\\\" /s /y"
			]
		},
		{
			"name": "bgfx",
			"platforms": ["windows"],
			"dir": "bgfx",
			"dependencies": ["bx"],
			"build_in_windows": "$(MKVFX_SRC_ROOT)/bgfx",
			"repository": {
				"type": "git",
				"url": "git://github.com/bkaradzic/bgfx.git"
			},
			"recipe_windows": [
				"cl /c /EHsc /MD +",
					"-I\"$(MKVFX_SRC_ROOT)/bgfx/include\" +",
					"-I\"$(MKVFX_SRC_ROOT)/bx/include\" +",
					"-I\"$(MKVFX_ROOT)/include\" +",
					"-I\"$(MKVFX_SRC_ROOT)/bgfx/3rdParty/khronos\" +",
					"-I\"$(MKVFX_SRC_ROOT)/bgfx/3rdParty/dxsdk/include\" +",
					"-I\"$(MKVFX_SRC_ROOT)/bx/include/compat/msvc\" +",
					"-I%WindowsSDK_IncludePath% +",
					"-DWIN32 -DWIN64 +",
					"-DBX_CONFIG_ENABLE_MSVC_LEVEL4_WARNINGS=1 -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS +",
					"\"$(MKVFX_SRC_ROOT)/bgfx/src/amalgamated.cpp\"",
				"lib /out:bgfx.lib \"$(MKVFX_SRC_ROOT)/bgfx/amalgamated.obj\"",
				"cl /c /EHsc /MDd +",
					"-I\"$(MKVFX_SRC_ROOT)/bgfx/include\" +",
					"-I\"$(MKVFX_SRC_ROOT)/bx/include\" +",
					"-I\"$(MKVFX_ROOT)/include\" +",
					"-I\"$(MKVFX_SRC_ROOT)/bgfx/3rdParty/khronos\" +",
					"-I\"$(MKVFX_SRC_ROOT)/bgfx/3rdParty/dxsdk/include\" +",
					"-I\"$(MKVFX_SRC_ROOT)/bx/include/compat/msvc\" +",
					"-I%WindowsSDK_IncludePath% +",
					"-DWIN32 -DWIN64 +",
					"-DBX_CONFIG_ENABLE_MSVC_LEVEL4_WARNINGS=1 -D__STDC_LIMIT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_CONSTANT_MACROS +",
					"\"$(MKVFX_SRC_ROOT)/bgfx/src/amalgamated.cpp\"",
				"lib /out:bgfx_d.lib \"$(MKVFX_SRC_ROOT)/bgfx/amalgamated.obj\"",
				"cmake -G \"Visual Studio 14 2015 Win64\" -DCMAKE_INSTALL_PREFIX=\"$(MKVFX_ROOT)\" \"$(MKVFX_SRC_ROOT)/bgfx/3rdparty/glsl-optimizer\"",
				"cmake --build . --config Release --target install"
			],
			"install_windows": [
				"xcopy \"$(MKVFX_SRC_ROOT)\\bgfx\\include\\bgfx\\*\" \"$(MKVFX_ROOT)\\include\\bgfx\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\bgfx\\bgfx.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\bgfx\\bgfx_d.lib\" \"$(MKVFX_ROOT)\\lib_debug\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\bgfx\\Release\\glslopt.exe\" \"$(MKVFX_ROOT)\\bin\\\" /s /y"
			]
		},
		{
			"name": "boost",
			"platforms": ["windows"],
			"dir": "boost",
			"notes": "building boost 1.60 for vs2014 compatibility, 1.57 is minimum for OSX, 1.55 is vfxplatform",
			"build_in": "$(MKVFX_SRC_ROOT)/boost/boost_1_70_0",
			"dependencies": [ "boost-build-club" ],
			"repository": {
				"type": "tgz",
				"url": "https://downloads.sourceforge.net/project/boost/boost/1.70.0/boost_1_70_0.tar.gz"
			},
			"recipe": [
				"xcopy \"$(MKVFX_SRC_ROOT)\\boost-build-club\\*\" \"$(MKVFX_SRC_ROOT)\\boost\\boost_1_70_0\\\" /s /y",
				"cmd.exe '/C build-win-shared.bat"
			],
			"install": [
				"xcopy \"$(MKVFX_SRC_ROOT)\\boost\\boost_1_70_0\\stage\\lib\\*.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\boost\\boost_1_70_0\\stage\\lib\\*.dll\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\boost\\boost_1_70_0\\boost\\*\" \"$(MKVFX_ROOT)\\include\\boost\\\" /s /y"
			]
		},
		{
			"name": "boost-build-club",
			"platforms": ["osx", "windows"],
			"dir": "boost-build-club",
			"build_in": "$(MKVFX_SRC_ROOT)/boost-build-club",
			"repository": {
				"type": "git",
				"url": "https://github.com/vfxpro99/boost-build-club.git"
			},
			"recipe": [],
			"install": []
		},
		{
			"name": "bullet",
			"platforms": ["osx"],
			"dir": "bullet",
			"build_in": "$(MKVFX_SRC_ROOT)/bullet/build3",
			"repository": {
				"type": "git",
				"url": "https://github.com/bulletphysics/bullet3.git"
			},
			"recipe_osx": [
				"./premake4_osx gmake",
				"cd gmake; make"
			],
			"install_osx": [
				"cp $(MKVFX_SRC_ROOT)/bullet/bin/libBullet3Dynamics_gmake.a $(MKVFX_ROOT)/lib/libBullet3Dynamics.a",
				"cp $(MKVFX_SRC_ROOT)/bullet/bin/libBullet3Geometry_gmake.a $(MKVFX_ROOT)/lib/libBullet3Geometry.a",
				"cp $(MKVFX_SRC_ROOT)/bullet/bin/libBulletCollision_gmake.a $(MKVFX_ROOT)/lib/libBulletCollision.a",
				"cp $(MKVFX_SRC_ROOT)/bullet/bin/libBullet3Collision_gmake.a $(MKVFX_ROOT)/lib/libBullet3Collision.a",
				"cp $(MKVFX_SRC_ROOT)/bullet/bin/libBullet3Common_gmake.a $(MKVFX_ROOT)/lib/libBullet3Common.a",
				"cp $(MKVFX_SRC_ROOT)/bullet/bin/libLinearMath_gmake.a $(MKVFX_ROOT)/lib/libLinearMath.a",
				"cp $(MKVFX_SRC_ROOT)/bullet/lib/libBullet2FileLoader_gmake.a $(MKVFX_ROOT)/lib/libBullet2FileLoader.a",
				"cp $(MKVFX_SRC_ROOT)/bullet/lib/libBullet3OpenCL_clew_gmake.a $(MKVFX_ROOT)/lib/libBullet3OpenCL_clew.a",
				"cp $(MKVFX_SRC_ROOT)/bullet/lib/libBulletSoftBody_gmake.a $(MKVFX_ROOT)/lib/libBulletSoftBody.a",
				"mkdir -p $(MKVFX_ROOT)/include/bullet",
				"mkdir -p $(MKVFX_ROOT)/include/bullet/BulletCollision",
				"mkdir -p $(MKVFX_ROOT)/include/bullet/BulletCollision/BroadphaseCollision",
				"mkdir -p $(MKVFX_ROOT)/include/bullet/BulletCollision/CollisionDispatch",
				"mkdir -p $(MKVFX_ROOT)/include/bullet/BulletCollision/CollisionShapes",
				"mkdir -p $(MKVFX_ROOT)/include/bullet/BulletDynamics",
				"mkdir -p $(MKVFX_ROOT)/include/bullet/BulletDynamics/Dynamics",
				"mkdir -p $(MKVFX_ROOT)/include/bullet/BulletDynamics/Dynamics/ConstraintSolver",
				"mkdir -p $(MKVFX_ROOT)/include/bullet/BulletDynamics/Vehicle",
				"mkdir -p $(MKVFX_ROOT)/include/bullet/LinearMath",
				"cp $(MKVFX_SRC_ROOT)/bullet/src/*.h $(MKVFX_ROOT)/include/bullet/",
				"cp $(MKVFX_SRC_ROOT)/bullet/src/BulletCollision/BroadphaseCollision/*.h $(MKVFX_ROOT)/include/bullet/BulletCollision/BroadphaseCollision",
				"cp $(MKVFX_SRC_ROOT)/bullet/src/BulletCollision/CollisionDispatch/*.h $(MKVFX_ROOT)/include/bullet/BulletCollision/CollisionDispatch",
				"cp $(MKVFX_SRC_ROOT)/bullet/src/BulletCollision/CollisionShapes/*.h $(MKVFX_ROOT)/include/bullet/BulletCollision/CollisionShapes",
				"cp $(MKVFX_SRC_ROOT)/bullet/src/BulletDynamics/Dynamics/*.h $(MKVFX_ROOT)/include/bullet/BulletDynamics/Dynamics",
				"cp $(MKVFX_SRC_ROOT)/bullet/src/BulletDynamics/ConstraintSolver/*.h  $(MKVFX_ROOT)/include/bullet/BulletDynamics/Dynamics/ConstraintSolver",
				"cp $(MKVFX_SRC_ROOT)/bullet/src/BulletDynamics/Vehicle/*.h $(MKVFX_ROOT)/include/bullet/BulletDynamics/Vehicle",
				"cp $(MKVFX_SRC_ROOT)/bullet/src/LinearMath/*.h $(MKVFX_ROOT)/include/bullet/LinearMath"
			]
		},
		{
			"name": "bx",
			"platforms": ["windows"],
			"dir": "bx",
			"build_in": "$(MKVFX_SRC_ROOT)/bx",
			"repository": {
				"type": "git",
				"url": "git://github.com/bkaradzic/bx.git"
			},
			"recipe_windows": [
				"\"$(MKVFX_SRC_ROOT)/bx/tools/bin/windows/genie.exe\" vs2015",
				"msbuild \"$(MKVFX_SRC_ROOT)\\bx\\.build\\projects\\vs2015\\bx.sln\" /t:Build /p:Configuration=Release /p:Platform=x64"
			],
			"install_windows": [
				"xcopy \"$(MKVFX_SRC_ROOT)\\bx\\include\\bx\\*\" \"$(MKVFX_ROOT)\\include\\bx\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\bx\\include\\compat\\*\" \"$(MKVFX_ROOT)\\include\\bx\\compat\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\bx\\include\\tinystl\\*\" \"$(MKVFX_ROOT)\\include\\tinystl\\\" /s /y"
			]
		},
        {
            "name": "freetype",
            "dir": "freetype",
            "dependencies": ["png", "z"],
            "build_in": "${MKVFX_BUILD_ROOT)/freetype",
            "repository": {
                "type": "zip",
                "url": "http://downloads.sourceforge.net/project/freetype/freetype2/2.9/ft29.zip"
            },
			"build" : {
				"cmake" : [
				],
				"configurations": [ "Debug", "Release" ]
			},
			"install": [
			]
        },
		{
			"name": "glew-build-club",
			"platforms": ["windows"],
			"notes": "glew is hard to build on Windows without cygwin",
			"dir": "glew-build-club",
			"repository": {
				"type": "git",
				"url": "https://github.com/vfxpro99/glew-build-club.git"
			},
			"recipe": [],
			"install": []
		},
		{
			"name": "glew",
			"dir": "glew",
			"dependencies": ["glew-build-club"],
			"build_in": "$(MKVFX_BUILD_ROOT)/glew",
			"recipe": [], 
			"install": [
				"powershell New-Item -ItemType Directory -Force -Path '\"$(MKVFX_ROOT)\\include\\GL'\"",
				"xcopy \"$(MKVFX_SRC_ROOT)\\glew-build-club\\include\\GL\\*\" \"$(MKVFX_ROOT)\\include\\GL\\\" /s /y",
				"cl /c -DSTATIC -DGLEW_BUILD -I\"$(MKVFX_ROOT)/include\" \"$(MKVFX_SRC_ROOT)/glew-build-club/src/glew.c\"",
				"lib /out:glew_static.lib glew.obj",
				"cl /c -DGLEW_BUILD -I\"$(MKVFX_ROOT)/include\" \"$(MKVFX_SRC_ROOT)/glew-build-club/src/glew.c\"",
				"link /dll /out:glew.dll glew.obj opengl32.lib",
				"cl /c -DSTATIC -DGLEW_MX -DGLEW_BUILD -I\"$(MKVFX_ROOT)/include\" \"$(MKVFX_SRC_ROOT)/glew-build-club/src/glew.c\"",
				"lib /out:glew_mx_static.lib glew.obj",
				"cl /c -DGLEW_MX -DGLEW_BUILD -I\"$(MKVFX_ROOT)/include\" \"$(MKVFX_SRC_ROOT)/glew-build-club/src/glew.c\"",
				"link /dll /out:glew_mx.dll glew.obj opengl32.lib",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\glew\\*.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\glew\\*.dll\" \"$(MKVFX_ROOT)\\bin\\\" /s /y"
			]
		},
		{
			"name": "glfw",
			"dir": "glfw",
			"notes": "GLFW_USE_RETINA option enables retina displays",
			"build_in": "$(MKVFX_BUILD_ROOT)/glfw",
			"repository": {
				"type": "git",
				"url": "https://github.com/glfw/glfw.git"
			},
			"build" : {
				"cmake" : [
					"-DGLFW_BUILD_TESTS=OFF",
					"-DGLFW_BUILD_EXAMPLES=OFF",
					"-DGLFW_BUILD_DOCS=OFF"
				],
				"configurations": [ "Debug", "Release" ]
			},
			"install": [
				"xcopy \"$(MKVFX_SRC_ROOT)\\glfw\\include\\GLFW\\*\" \"$(MKVFX_ROOT)\\include\\GLFW\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\glfw\\src\\Release\\*\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
                "copy \"$(MKVFX_BUILD_ROOT)\\glfw\\src\\Debug\\glfw3.lib\" \"$(MKVFX_BUILD_ROOT)\\lib\\glfw3d.lib\""
			]
		},
		{
			"name": "glm",
			"platforms": ["osx", "windows"],
			"dir": "glm",
			"build_in": "/tmp/glm",
			"repository": {
				"type": "git",
				"url": "git://github.com/g-truc/glm.git"
			},
			"recipe": [
				"cmake -DCMAKE_INSTALL_PREFIX=$(MKVFX_ROOT) $(MKVFX_SRC_ROOT)/glm",
				"make -j 4"
			],
			"install_osx": [
				"make install"
			],
			"recipe_windows": [
				"cmake -DCMAKE_INSTALL_PREFIX=\"$(MKVFX_ROOT)\" \"$(MKVFX_SRC_ROOT)/glm\""
			],
			"install_windows": [
				"xcopy \"$(MKVFX_SRC_ROOT)\\glm\\glm\\*\" \"$(MKVFX_ROOT)\\include\\glm\\\" /s /y"
			]
		},
		{
			"name": "hdf5",
			"platforms": ["osx", "windows"],
			"dir": "hdf5",
			"build_in": "$(MKVFX_BUILD_ROOT)/hdf5",
			"repository": {
				"type": "git",
				"url": "git://github.com/vfxpro99/hdf5.git"
			},
			"recipe_osx": [
				"cmake -DHDF5_BUILD_HL_LIB=1 -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=/tmp/hdf5-stage -DCMAKE_INSTALL_PREFIX=$(MKVFX_ROOT) $(MKVFX_SRC_ROOT)/hdf5",
				"make -j 4",
				"make -j 4"
			],
			"install_osx": [
				"make install"
			],
			"recipe_windows": [
				"cmake -G \"Visual Studio 14 2015 Win64\" +",
					"-DHDF5_BUILD_HL_LIB=1 -DCMAKE_ARCHIVE_OUTPUT_DIRECTORY=/tmp/hdf5-stage -DCMAKE_INSTALL_PREFIX=\"$(MKVFX_ROOT)\" \"$(MKVFX_SRC_ROOT)/hdf5\""
			],
			"install_windows": [

			]
		},
		{
			"name": "IlmBase",
			"platforms": ["osx", "windows"],
			"notes": "Namespaced dylibs must be symlinked to the base names",
			"dir": "OpenEXR",
			"build_in": "$(MKVFX_BUILD_ROOT)/IlmBase",
			"repository": {
				"type": "git",
				"url": "git://github.com/openexr/openexr.git"
			},
			"recipe_windows": [
				"cmake -G \"Visual Studio 14 2015 Win64\" -DCMAKE_INSTALL_PREFIX=\"$(MKVFX_ROOT)\" \"$(MKVFX_SRC_ROOT)/OpenEXR/IlmBase\"",
				"cmake --build . --config Release --target install"
			],
			"install_windows": [
				"powershell New-Item -ItemType Directory -Force -Path '\"$(MKVFX_ROOT)\\include\\OpenEXR'\"",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\config\\*\" \"$(MKVFX_ROOT)\\include\\OpenEXR\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\Half\\*.h\" \"$(MKVFX_ROOT)\\include\\OpenEXR\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\OpenEXR\\IlmBase\\Half\\*.h\" \"$(MKVFX_ROOT)\\include\\OpenEXR\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\OpenEXR\\IlmBase\\Iex\\*.h\" \"$(MKVFX_ROOT)\\include\\OpenEXR\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\OpenEXR\\IlmBase\\IexMath\\*.h\" \"$(MKVFX_ROOT)\\include\\OpenEXR\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\OpenEXR\\IlmBase\\IlmThread\\*.h\" \"$(MKVFX_ROOT)\\include\\OpenEXR\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\OpenEXR\\IlmBase\\Imath\\*.h\" \"$(MKVFX_ROOT)\\include\\OpenEXR\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\Half\\Release\\Half.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\Half\\Release\\Half.dll\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\Iex\\Release\\Iex-2_2.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\Iex\\Release\\Iex-2_2.dll\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\IexMath\\Release\\IexMath-2_2.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\IexMath\\Release\\IexMath-2_2.dll\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\Imath\\Release\\Imath-2_2.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\Imath\\Release\\Imath-2_2.dll\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\IlmThread\\Release\\IlmThread-2_2.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\IlmThread\\Release\\IlmThread-2_2.dll\" \"$(MKVFX_ROOT)\\bin\\\" /s /y"
			]
		},
		{
			"name": "LabText",
			"platforms": ["windows"],
			"dir": "LabText",
			"build_in": "$(MKVFX_BUILD_ROOT)/LabText",
			"repository": {
				"type": "git",
				"url": "git://github.com/meshula/LabText.git"
			},
			"recipe_windows": [
				"cl /c \"$(MKVFX_SRC_ROOT)/LabText/src/LabText/dict.cpp\"",
				"cl /c /EHsc -I\"$(MKVFX_SRC_ROOT)/LabText/src\" \"$(MKVFX_SRC_ROOT)/LabText/src/LabText/Dictionary.cpp\"",
				"cl /c \"$(MKVFX_SRC_ROOT)/LabText/src/LabText/ftoa.cpp\"",
				"cl /c \"$(MKVFX_SRC_ROOT)/LabText/src/LabText/itoa.cpp\"",
				"cl /c /EHsc -I\"$(MKVFX_SRC_ROOT)/LabText/src\" \"$(MKVFX_SRC_ROOT)/LabText/src/LabText/TextScanner.cpp\"",
				"cl /c /EHsc -I\"$(MKVFX_SRC_ROOT)/LabText/src\" \"$(MKVFX_SRC_ROOT)/LabText/src/LabText/TextScannerLib.cpp\"",
				"lib /out:LabText.lib dict.obj Dictionary.obj ftoa.obj itoa.obj TextScanner.obj TextScannerLib.obj"
			],
			"install_windows": [
				"xcopy \"$(MKVFX_BUILD_ROOT)\\LabText\\LabText.lib\" \"$(MKVFX_ROOT)\\lib\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\LabText\\src\\LabText\\*.hpp\" \"$(MKVFX_ROOT)\\include\\LabText\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\LabText\\src\\LabText\\*.h\" \"$(MKVFX_ROOT)\\include\\LabText\\\" /s /y"
			]
        },

        {
			"name": "libpng",
			"dir": "libpng",
			"build_in": "$(MKVFX_BUILD_ROOT)/libpng",
			"repository": {
				"type": "git",
				"url": "git://github.com/glennrp/libpng.git"
			},
            "cmake" : [
                "-DBUILDSTATIC=1"
            ],
            "configurations": [ "Debug", "Release" ],
			"install": [
			]
		},

		{
			"name": "OpenColorIO",
			"platforms": ["windows"],
			"dir": "OpenColorIO",
			"build_in": "$(MKVFX_BUILD_ROOT)/OpenColorIO",
			"notes": "OpenColorIO and OpenImageIO are mutually dependent so running mkvfx twice is necessary. nev vars described here #{HOMEBREW_PREFIX}/share/ocio/setup_ocio.sh",
			"dependencies": ["glew","python"],
			"repository": {
				"type": "git",
				"url": "git://github.com/imageworks/OpenColorIO.git"
			},
			"recipe_windows": [
				"cmake -G \"Visual Studio 14 2015 Win64\" -DOCIO_BUILD_APPS=OFF -DOCIO_BUILD_TRUELIGHT=OFF +",
					"-DNDEBUG-DOCIO_BUILD_NUKE=OFF -DOCIO_BUILD_DOCS=OFF -DOCIO_BUILD_TESTS=OFF \"$(MKVFX_SRC_ROOT)/OpenColorIO\""
			],
			"install_windows": [
				"cmake --build . --config Release --target install"
			]
		},
		{
			"name": "OpenEXR",
			"platforms": ["windows"],
			"notes": "Namespaced dylibs must be symlinked to the base names",
			"dir": "OpenEXR",
			"build_in": "$(MKVFX_BUILD_ROOT)/OpenEXR",
			"dependencies": [ "IlmBase" ],
			"dependencies_windows": [ "IlmBase", "z" ],
			"repository": {
				"type": "git",
				"url": "git://github.com/openexr/openexr.git"
			},
			"recipe_windows": [
				"cmake -G \"Visual Studio 14 2015 Win64\" -DILMBASE_PACKAGE_PREFIX=\"$(MKVFX_ROOT)\" -DZLIB_LIBRARY=\"$(MKVFX_ROOT)\\lib\\zlibstatic.lib\" -DZLIB_INCLUDE_DIR=\"$(MKVFX_ROOT)\\include\" -DCMAKE_INSTALL_PREFIX=\"$(MKVFX_ROOT)\" \"$(MKVFX_SRC_ROOT)/OpenEXR/OpenEXR\"",
				"powershell New-Item -ItemType Directory -Force -Path '\"$(MKVFX_BUILD_ROOT)\\OpenEXR\\IlmImf\\Release'\"",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\Half\\Release\\Half.dll\" \"$(MKVFX_BUILD_ROOT)\\OpenEXR\\IlmImf\\Release\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\Iex\\Release\\*.dll\" \"$(MKVFX_BUILD_ROOT)\\OpenEXR\\IlmImf\\Release\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\IlmBase\\IlmThread\\Release\\*.dll\" \"$(MKVFX_BUILD_ROOT)\\OpenEXR\\IlmImf\\Release\" /s /y",
				"cmake --build . --config Release --target install"
			],
			"install_windows": [
				"xcopy \"$(MKVFX_BUILD_ROOT)\\OpenEXR\\IlmImf\\Release\\IlmImf*.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\OpenEXR\\IlmImf\\Release\\IlmImf*.dll\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\OpenEXR\\exrenvmap\\Release\\*.exe\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\OpenEXR\\exrheader\\Release\\*.exe\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\OpenEXR\\exrmakepreview\\Release\\*.exe\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\OpenEXR\\exrmultipart\\Release\\*.exe\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\OpenEXR\\exrmultiview\\Release\\*.exe\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\OpenEXR\\exrstdattr\\Release\\*.exe\" \"$(MKVFX_ROOT)\\bin\\\" /s /y"
			]
		},
		{
			"name": "PyIlmBase",
			"platforms": ["osx", "windows"],
			"notes": "A system include must be patched into CMakeFiles.txt for boost python",
			"dir": "OpenEXR",
			"build_in": "$(MKVFX_BUILD_ROOT)/PyIlmBase",
			"dependencies": [ "IlmBase", "boost" ],
			"repository": {
				"type": "git",
				"url": "git://github.com/openexr/openexr.git"
			},
			"recipe_windows": [
				"cmake -DILMBASE_PACKAGE_PREFIX=$(MKVFX_ROOT) -G \"Visual Studio 14 2015 Win64\" -DCMAKE_INSTALL_PREFIX=\"$(MKVFX_ROOT)\" \"$(MKVFX_SRC_ROOT)/OpenEXR/PyIlmBase\"",
				"cmake --build . --config Release --target install"
			],
			"install_windows": []
		},
		{
			"name": "qt",
			"platforms": ["osx"],
			"recipe": [
			   "echo Please ensure Qt is installed in your installation root.",
			   "echo It takes many many hours to build, and so qt4 and qt5 not listed as",
			   "dependencies in the projects they are needed."
			]
		},
		{
			"name": "qt4",
			"platforms": ["osx"],
			"notes": "http://www.linuxfromscratch.org/blfs/view/svn/x/qt4.html",
			"dir": "qt4",
			"build_in": "$(MKVFX_SRC_ROOT)/qt4/qt-everywhere-opensource-src-4.8.6",
			"recipe_osx": [
				"echo qt4 does not build on OSX 10.10 and greater"
			],
			"recipe": [
				"./configure --disable-dependency-tracking --prefix=$(MKVFX_ROOT) +",
				" -confirm-license -opensource -release +",
				" -nomake tests -nomake examples",
				"make -j 4"
			],
			"install_osx": [
				"echo qt4 cannot be installed on OSX 10.10 and greater"
			],
			"install": [
				"make install"
			]
		},
		{
			"name": "qt5",
			"platforms": ["osx"],
			"dir": "qt5",
			"build_in": "$(MKVFX_SRC_ROOT)/qt5/qt-everywhere-opensource-src-5.4.0",
			"repository": {
				"type": "curl-tgz",
				"url": "http://download.qt-project.org/official_releases/qt/5.4/5.4.0/single/qt-everywhere-opensource-src-5.4.0.tar.gz"
			},
			"notes": "qt5 takes an unknown number of hours to complete building, so it is not listed as a dependency.",
			"recipe": [
				"./configure --disable-dependency-tracking --prefix=$(MKVFX_ROOT) +",
				" -confirm-license -opensource -release +",
				" -no-framework",
				" -nomake tests -nomake examples",
				"make -j 4"
			],
			"install": [
				"make install"
			]
		},
		{
			"name": "sdl2",
			"platforms": ["windows"],
			"dir": "sdl2",
			"notes": "Building from github mirror",
			"build_in": "$(MKVFX_BUILD_ROOT)/sdl2",
			"repository": {
				"type": "git",
				"url": "https://github.com/spurious/SDL-mirror.git"
			},
			"recipe_windows": [
				"cmake -G \"Visual Studio 14 2015 Win64\" -DCMAKE_INSTALL_PREFIX=\"$(MKVFX_ROOT)\" \"$(MKVFX_SRC_ROOT)\\sdl2\"",
				"cmake --build . --config Release --target install"
			],
			"install_windows": [
				"xcopy \"$(MKVFX_SRC_ROOT)\\sdl2\\include\\*.h\" \"$(MKVFX_ROOT)\\include\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\sdl2\\include\\*.h\" \"$(MKVFX_ROOT)\\include\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\sdl2\\Release\\*.lib\" \"$(MKVFX_ROOT)\\lib\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\sdl2\\Release\\*.dll\" \"$(MKVFX_ROOT)\\bin\" /s /y"
			]
		},
		{
			"name": "stb",
			"platforms": ["osx", "windows"],
			"dir": "stb",
			"build_in": "$(MKVFX_BUILD_ROOT)/stb",
			"repository": {
				"type": "git",
				"url": "https://github.com/nothings/stb.git"
			},
			"recipe": [],
			"install_windows": [
				"xcopy \"$(MKVFX_SRC_ROOT)\\stb\\stb*.h\" \"$(MKVFX_ROOT)\\include\" /s /y"
			]
		},
		{
			"name": "tbb",
			"dir": "tbb",
			"repository": {
				"type": "zip",
				"url": "https://www.threadingbuildingblocks.org/sites/default/files/software_releases/windows/tbb44_20160526oss_win_0.zip"
			},
			"recipe": [
			],
			"install": [
                "xcopy \"$(MKVFX_SRC_ROOT)\\tbb44_20160526oss\\include\\serial\" \"$(MKVFX_ROOT)\\include\\serial\\\" /s /y",
                "xcopy \"$(MKVFX_SRC_ROOT)\\tbb44_20160526oss\\include\\tbb\" \"$(MKVFX_ROOT)\\include\\tbb\\\" /s /y",
                "xcopy \"$(MKVFX_SRC_ROOT)\\tbb44_20160526oss\\lib\\intel64\\vc14\\*.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
                "xcopy \"$(MKVFX_SRC_ROOT)\\tbb44_20160526oss\\lib\\intel64\\vc14\\*.def\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
                "xcopy \"$(MKVFX_SRC_ROOT)\\tbb44_20160526oss\\bin\\intel64\\vc14\\*.dll\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
                "xcopy \"$(MKVFX_SRC_ROOT)\\tbb44_20160526oss\\bin\\intel64\\vc14\\*.pdb\" \"$(MKVFX_ROOT)\\bin\\\" /s /y",
                "copy \"$(MKVFX_RECIPE_DIR)\\tbb_config.h\" \"$(MKVFX_ROOT)\\include\\tbb\\\""
			]
		},
		{
			"name": "z",
			"platforms": ["windows"],
			"dir": "zlib",
			"build_in": "$(MKVFX_BUILD_ROOT)/zlib",
			"repository": {
				"type": "git",
				"url": "git://github.com/madler/zlib.git"
			},
			"recipe_windows": [
				"cmake -G \"Visual Studio 14 2015 Win64\" -DCMAKE_INSTALL_PREFIX=\"$(MKVFX_ROOT)\" \"$(MKVFX_SRC_ROOT)\\zlib\"",
				"cmake --build . --config Release --target install"
			],
			"install_windows": [
				"xcopy \"$(MKVFX_BUILD_ROOT)\\zlib\\*.h\" \"$(MKVFX_ROOT)\\include\\\" /s /y",
				"xcopy \"$(MKVFX_SRC_ROOT)\\zlib\\zlib.h\" \"$(MKVFX_ROOT)\\include\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\zlib\\Release\\zlib.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\zlib\\Release\\zlibstatic.lib\" \"$(MKVFX_ROOT)\\lib\\\" /s /y",
				"xcopy \"$(MKVFX_BUILD_ROOT)\\zlib\\Release\\zlib.dll\" \"$(MKVFX_ROOT)\\bin\\\" /s /y"
			]
		}
	]
}
